---
name: build

on:
  push:
  release:
    types: [created]

jobs:
  windows:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v2

      - name: Install dependencies
        run: |
          Import-Module "$env:ChocolateyInstall\helpers\chocolateyProfile.psm1"
          choco install cmake
          refreshenv
          Write-Output "$env:PATH" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: boost
        run: |
          Invoke-WebRequest https://boostorg.jfrog.io/artifactory/main/release/1.84.0/source/boost_1_84_0.tar.gz -OutFile boost.tar.gz
          tar -xzf .\boost.tar.gz
          Rename-Item -path boost_1_84_0 -NewName boost_libs

      - name: MsgPack
        run: |
          Invoke-WebRequest https://github.com/msgpack/msgpack-c/releases/download/cpp-6.1.0/msgpack-cxx-6.1.0.tar.gz -OutFile msgpack.tar.gz
          tar -xzf .\msgpack.tar.gz
          cd msgpack-cxx-6.1.0
          cmake -DMSGPACK_CXX14=ON -D Boost_INCLUDE_DIR=..\boost_libs .
          msbuild ALL_BUILD.vcxproj -t:rebuild -property:Configuration=Release

      - name: LibSodium
        run: |
          Invoke-WebRequest https://github.com/jedisct1/libsodium/releases/download/1.0.19-RELEASE/libsodium-1.0.19-msvc.zip -OutFile libsodium.zip
          Expand-Archive libsodium.zip .

      - name: LibSaltpack
        run: |
          Invoke-WebRequest https://github.com/gherynos/libsaltpack/archive/v1.0.0.tar.gz -OutFile libsaltpack.tar.gz
          tar -xvzf .\libsaltpack.tar.gz
          cd libsaltpack-1.0.0
          git clone https://github.com/983/Num.git ext/Num
          cmake -D Boost_INCLUDE_DIR=..\boost_libs -D MSGPACK_INCLUDE_DIR=..\msgpack-cxx-6.1.0\include -D LIBSODIUM_INCLUDE_DIRS=..\libsodium\include -D LIBSODIUM_LIBRARIES=..\libsodium\x64\Release\v143\static\libsodium.lib .
          msbuild saltpack.vcxproj -t:rebuild -property:Configuration=Release

      - name: Build
        run: |
          mvn compile
          cmake -D Boost_INCLUDE_DIR=.\boost_libs -D MSGPACK_INCLUDE_DIR=.\msgpack-cxx-6.1.0\include -D LIBSODIUM_INCLUDE_DIRS=.\libsodium\include -D LIBSODIUM_LIBRARIES=.\libsodium\x64\Release\v143\static\libsodium.lib -D LIBSALTPACK_INCLUDE_DIRS=.\libsaltpack-1.0.0\include -D LIBSALTPACK_LIBRARIES=.\libsaltpack-1.0.0\Release\saltpack.lib .
          msbuild saltpack-jni.vcxproj -t:rebuild -property:Configuration=Release
          mvn exec:java -D"exec.mainClass"="com.gherynos.libsaltpack.Loader"
          mvn test

      - uses: actions/upload-artifact@v4
        with:
          name: windows-2022.zip
          path: src/main/resources/lib/

  unix:
    strategy:
      matrix:
        os: [ubuntu-22.04, macos-13, macos-14]
        include:
          - os: ubuntu-22.04
            library: libsaltpack-jni.so
          - os: macos-13
            library: libsaltpack-jni.dylib
          - os: macos-14
            library: libsaltpack-jni.dylib
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - if: runner.os == 'Linux'
        name: Linux dependencies
        run: |
          sudo apt-get install -y build-essential wget cmake maven xz-utils m4

      - name: boost
        run: |
          wget https://boostorg.jfrog.io/artifactory/main/release/1.84.0/source/boost_1_84_0.tar.gz
          tar -xzf boost_1_84_0.tar.gz
          mv boost_1_84_0 boost_libs

      - name: MsgPack
        run: |
          wget https://github.com/msgpack/msgpack-c/releases/download/cpp-6.1.0/msgpack-cxx-6.1.0.tar.gz
          tar -xvzf msgpack-cxx-6.1.0.tar.gz
          cd msgpack-cxx-6.1.0
          cmake -DMSGPACK_CXX14=ON -DBoost_INCLUDE_DIR=../boost_libs .
          sudo cmake --build . --target install

      - name: LibSodium
        run: |
          wget https://github.com/jedisct1/libsodium/releases/download/1.0.19-RELEASE/libsodium-1.0.19.tar.gz
          tar -xvzf libsodium-1.0.19.tar.gz
          cd libsodium-stable
          ./configure --with-pic
          make
          sudo make install

      - name: LibSaltpack
        run: |
          wget https://github.com/gherynos/libsaltpack/archive/v1.0.0.tar.gz
          tar -xvzf v1.0.0.tar.gz
          cd libsaltpack-1.0.0
          git clone https://github.com/983/Num.git ext/Num
          cmake -DBoost_INCLUDE_DIR=../boost_libs .
          make
          sudo make install

      - name: Build
        run: |
          mvn compile
          cmake -DBoost_INCLUDE_DIR=./boost_libs .
          make
          mvn exec:java -Dexec.mainClass="com.gherynos.libsaltpack.Loader"
          rm ${{ matrix.library }}
          mvn test

      - if: runner.os == 'Linux' && github.event_name == 'push'
        name: Coveralls report
        run: mvn jacoco:report coveralls:report -DrepoToken=${{ secrets.COVERALLS_TOKEN }}

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}.zip
          path: src/main/resources/lib/

  assemble:
    needs:
      - unix
      - windows
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Libraries path
        run: |
          mkdir -p src/main/resources/lib

      - uses: actions/download-artifact@v4
        with:
          name: ubuntu-22.04.zip
          path: src/main/resources/lib

      - uses: actions/download-artifact@v4
        with:
          name: macos-13.zip
          path: src/main/resources/lib

      - uses: actions/download-artifact@v4
        with:
          name: macos-14.zip
          path: src/main/resources/lib

      - uses: actions/download-artifact@v4
        with:
          name: windows-2022.zip
          path: src/main/resources/lib

      - uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Package
        run: |
          mvn package

      - if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: assemble.zip
          path: target/*.jar

      - if: github.event_name == 'release'
        name: Publish
        run: |
          mvn --batch-mode deploy

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
